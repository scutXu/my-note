<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>160</y>
      <w>70</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>MyAVPacketList
--
AVPacket  pkt;
int       serial;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>375</x>
      <y>220</y>
      <w>225</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>PacketQueue
--
MyAVPacketList *  first_pkt;
MyAVPacketList *  last_pkt;
int               nb_packets;
int               size;
int64_t           duration;        #所有packet的总duration
int               abort_request;
int               serial;          #每次seek会更新该值并赋值到
                                    接下来读取到的新Packet，用
                                    于标志不同的视频段
SDL_mutex *       mutex;
SDL_cond *        cond;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>770</x>
      <y>310</y>
      <w>195</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>Clock
--
double  pts;
double  pts_drift;#pts - last_updated
double  last_updated;#最近一次更新pts时的格林威治时间
double  speed;
int     serial;
int     paused;
int *   queueserial;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>625</x>
      <y>85</y>
      <w>175</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Frame
--
AVFrame *      frame;
AVSubtitile    sub;
int            serial;
double         pts;
double         duration;      #该Frame的时长
int64_t        pos;           #文件中的字节位置
SDL_Texture *  bmp;
int            allocated;
int            width;
int            height;
int            format;
AVRational     sar;
int            uploaded;
int            flip_v;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>185</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>635</x>
      <y>225</y>
      <w>105</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>FrameQueue
--
Frame []       queue;
int            rindex;
int            windex;
int            size;
int            max_size;
int            keep_last;
int            rindex_shown;
PacketQueue *  pktq;

SDL_mutex *    mutex;
SDL_cond *     cond;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>190</y>
      <w>15</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>595</x>
      <y>255</y>
      <w>50</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>260</y>
      <w>55</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
m1=1
m2=1</panel_attributes>
    <additional_attributes>90.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>60</x>
      <y>150</y>
      <w>275</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Decoder
--
AVPacket          pkt;
AVPacket          pkt_temp;            #存放从PacketQueue取出的Packet，解
                                        码失败或一个（音频）Packet需要分多
                                        次解码时，下一次的解码直接操作于该
                                        变量而不需要从队列中取新的Packet
                                        
PacketQueue *     queue;
AVCodecContext *  avctx;
int               pkt_serial;          #从PacketQueue获取的最新的Packet对
                                        应的serial
                                        
int               finished;
int               packet_pending;      #标志pkt_temp是否仍有效，若有效则不
                                        需要从PacketQueue获取新Packet
                                        
int64_t           start_pts;           #只对音频解码器有意义，会被赋值为
                                        AVStream::start_pts
                                        
AVRational        start_pts_tb;        #只对音频解码器有意义，会被赋值为
                                        AVStream::time_base

int64_t           next_pts;
AVRational        next_pts_tb;
SDL_cond *        empty_queue_cond;
SDL_Thread *      decoder_tid;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>430</x>
      <y>415</y>
      <w>280</w>
      <h>650</h>
    </coordinates>
    <panel_attributes>VideoState
--

SDL_Thread * read_tid;#读取AVPacket的线程
AVInputFormat * iformat;
int abort_request;
int force_refresh;#强制画面刷新，切换showmode或者切换是否全屏时会设为1
int paused;
int last_paused;#在read_tid线程loop中检测paused变量的改变，paused改变后需要启动/关闭网络流
int queue_attachments_req;是否尝试（当视频AVStream::disposition包含ATTACHED_PIC标志位时）往视频packet队列中投入视频AVStream::attached_pic（mp3专辑封面），初始化时或发生seek时都会设为1
int seek_req;是否发生了seek
int seek_flags;
int64_t seek_pos;
int64_t seek_rel;
int read_pause_return;
AVFormatContext *ic;
int realtime;

Clock audclk;
Clock vidclk;
Clock extclk;

FrameQueue pictq;
FrameQueue subpq;
FrameQueue sampq;

Decoder auddec;
Decoder viddec;
Decoder subdec;

int audio_stream;

int av_sync_type;

double audio_clock;
int audio_clock_serial;
double audio_diff_cum; /* used for AV difference average computation */
double audio_diff_avg_coef;
double audio_diff_threshold;
int audio_diff_avg_count;
AVStream *audio_st;
PacketQueue audioq;
int audio_hw_buf_size;
uint8_t *audio_buf;
uint8_t *audio_buf1;
unsigned int audio_buf_size; /* in bytes */
unsigned int audio_buf1_size;
int audio_buf_index; /* in bytes */
int audio_write_buf_size;
int audio_volume;
int muted;
struct AudioParams audio_src;
#if CONFIG_AVFILTER
struct AudioParams audio_filter_src;
#endif
struct AudioParams audio_tgt;
struct SwrContext *swr_ctx;
int frame_drops_early;
int frame_drops_late;

enum ShowMode {
  SHOW_MODE_NONE = -1, SHOW_MODE_VIDEO = 0, SHOW_MODE_WAVES, SHOW_MODE_RDFT, SHOW_MODE_NB
} show_mode;
int16_t sample_array[SAMPLE_ARRAY_SIZE];
int sample_array_index;
int last_i_start;
RDFTContext *rdft;
int rdft_bits;
FFTSample *rdft_data;
int xpos;
double last_vis_time;
SDL_Texture *vis_texture;
SDL_Texture *sub_texture;

int subtitle_stream;
AVStream *subtitle_st;
PacketQueue subtitleq;

double frame_timer;
double frame_last_returned_time;
double frame_last_filter_delay;
int video_stream;
AVStream *video_st;
PacketQueue videoq;
double max_frame_duration;      // maximum duration of a frame - above this, we consider the jump a timestamp discontinuity
struct SwsContext *img_convert_ctx;
struct SwsContext *sub_convert_ctx;
int eof;

char *filename;
int width, height, xleft, ytop;
int step;


int last_video_stream, last_audio_stream, last_subtitle_stream;

SDL_cond *continue_read_thread;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>205</x>
      <y>365</y>
      <w>260</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;500.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>305</y>
      <w>25</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>455</x>
      <y>310</y>
      <w>240</w>
      <h>115</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>460.0;10.0;10.0;210.0</additional_attributes>
  </element>
</diagram>
