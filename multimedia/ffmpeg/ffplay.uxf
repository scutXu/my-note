<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>200</x>
      <y>80</y>
      <w>140</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>MyAVPacketList
--
AVPacket  pkt;
int       serial;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>190</y>
      <w>450</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>PacketQueue
--
MyAVPacketList *  first_pkt;
MyAVPacketList *  last_pkt;
int               nb_packets;
int               size;
int64_t           duration;        #所有packet的总duration
int               abort_request;
int               serial;          #每次seek会更新该值并赋值到
                                    接下来读取到的新Packet，用
                                    于标志不同的视频段
SDL_mutex *       mutex;
SDL_cond *        cond;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>550</x>
      <y>0</y>
      <w>160</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>Clock
--
double  pts;
double  pts_drift;
double  last_updated;
double  speed;
int     serial;
int     paused;
int *   queueserial;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>820</x>
      <y>190</y>
      <w>220</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Frame
--
AVFrame *      frame;
AVSubtitile    sub;
int            serial;
double         pts;
double         duration;      #该Frame的时长
int64_t        pos;           #文件中的字节位置
SDL_Texture *  bmp;
int            allocated;
int            width;
int            height;
int            format;
AVRational     sar;
int            uploaded;
int            flip_v;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>130</y>
      <w>110</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;60.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>200</y>
      <w>210</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>FrameQueue
--
Frame []       queue;
int            rindex;
int            windex;
int            size;
int            max_size;
int            keep_last;
int            rindex_shown;
PacketQueue *  pktq;

SDL_mutex *    mutex;
SDL_cond *     cond;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>260</y>
      <w>80</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;60.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>520</x>
      <y>260</y>
      <w>60</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>290</x>
      <y>360</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>490</y>
      <w>550</w>
      <h>340</h>
    </coordinates>
    <panel_attributes>Decoder
--
AVPacket          pkt;
AVPacket          pkt_temp;            #存放从PacketQueue取出的Packet，解
                                        码失败或一个（音频）Packet需要分多
                                        次解码时，下一次的解码直接操作于该
                                        变量而不需要从队列中取新的Packet
                                        
PacketQueue *     queue;
AVCodecContext *  avctx;
int               pkt_serial;          #从PacketQueue获取的最新的Packet对
                                        应的serial
                                        
int               finished;
int               packet_pending;      #标志pkt_temp是否仍有效，若有效则不
                                        需要从PacketQueue获取新Packet
                                        
int64_t           start_pts;           #只对音频解码器有意义，会被赋值为
                                        AVStream::start_pts
                                        
AVRational        start_pts_tb;        #只对音频解码器有意义，会被赋值为
                                        AVStream::time_base

int64_t           next_pts;
AVRational        next_pts_tb;
SDL_cond *        empty_queue_cond;
SDL_Thread *      decoder_tid;</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
